// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using app.Context;

namespace app.Migrations
{
    [DbContext(typeof(EFDbContext))]
    [Migration("20230620062313_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("app.Models.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime>("LastUpdateTime");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new { Id = new Guid("5dabaac1-56d8-4e16-8be1-b73c2f8fb2ec"), LastUpdateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), UserId = new Guid("fd3cac3f-651b-4088-b47b-a3b1234bd0c6") }
                    );
                });

            modelBuilder.Entity("app.Models.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ContactId");

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<DateTime>("DeliveryTime");

                    b.Property<DateTime>("SendTime");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("app.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = new Guid("fd3cac3f-651b-4088-b47b-a3b1234bd0c6"), State = 0 },
                        new { Id = new Guid("5dabaac1-56d8-4e16-8be1-b73c2f8fb2ec"), State = 0 }
                    );
                });

            modelBuilder.Entity("app.Models.Entities.Contact", b =>
                {
                    b.HasOne("app.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("app.Models.Entities.User", "Owner")
                        .WithMany("Contacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("app.Models.Entities.Message", b =>
                {
                    b.HasOne("app.Models.Entities.User", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.HasOne("app.Models.Entities.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
